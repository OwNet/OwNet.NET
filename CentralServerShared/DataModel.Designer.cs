//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataModel", "CacheAccessLog", "Cache", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Cache), "AccessLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.AccessLog))]
[assembly: EdmRelationshipAttribute("DataModel", "CacheRecommendedUpdate", "Cache", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Cache), "RecommendedUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.RecommendedUpdate))]
[assembly: EdmRelationshipAttribute("DataModel", "ServerCache", "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Server), "Cache", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.Cache))]
[assembly: EdmRelationshipAttribute("DataModel", "CachePreviousUpdate", "Cache", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Cache), "PreviousUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.PreviousUpdate))]
[assembly: EdmRelationshipAttribute("DataModel", "ServerActivityLog", "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Server), "ActivityLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.ActivityLog), true)]
[assembly: EdmRelationshipAttribute("DataModel", "ServerRecommendedUpdate", "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Server), "RecommendedUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.RecommendedUpdate))]
[assembly: EdmRelationshipAttribute("DataModel", "GroupRecommendation", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Group), "Recommendation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.Recommendation))]
[assembly: EdmRelationshipAttribute("DataModel", "ServerGroupServer", "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Server), "GroupServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.GroupServer))]
[assembly: EdmRelationshipAttribute("DataModel", "GroupGroupServer", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Group), "GroupServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.GroupServer))]
[assembly: EdmRelationshipAttribute("DataModel", "ServerRecommendation", "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Server), "Recommendation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.Recommendation))]
[assembly: EdmRelationshipAttribute("DataModel", "GroupTag", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Group), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.Tag))]
[assembly: EdmRelationshipAttribute("DataModel", "PredictionServer", "Prediction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CentralServerShared.Prediction), "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Server))]
[assembly: EdmRelationshipAttribute("DataModel", "ServerUser", "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Server), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.User))]
[assembly: EdmRelationshipAttribute("DataModel", "UserUserCookies", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.User), "UserCookies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.UserCookie))]
[assembly: EdmRelationshipAttribute("DataModel", "UserUserGroups", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.User), "UserGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.UserGroup))]
[assembly: EdmRelationshipAttribute("DataModel", "GroupUserGroups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerShared.Group), "UserGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerShared.UserGroup))]

#endregion

namespace CentralServerShared
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataModelContainer object using the connection string found in the 'DataModelContainer' section of the application configuration file.
        /// </summary>
        public DataModelContainer() : base("name=DataModelContainer", "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(string connectionString) : base(connectionString, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(EntityConnection connection) : base(connection, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Server> Servers
        {
            get
            {
                if ((_Servers == null))
                {
                    _Servers = base.CreateObjectSet<Server>("Servers");
                }
                return _Servers;
            }
        }
        private ObjectSet<Server> _Servers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessLog> AccessLogs
        {
            get
            {
                if ((_AccessLogs == null))
                {
                    _AccessLogs = base.CreateObjectSet<AccessLog>("AccessLogs");
                }
                return _AccessLogs;
            }
        }
        private ObjectSet<AccessLog> _AccessLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cache> Caches
        {
            get
            {
                if ((_Caches == null))
                {
                    _Caches = base.CreateObjectSet<Cache>("Caches");
                }
                return _Caches;
            }
        }
        private ObjectSet<Cache> _Caches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecommendedUpdate> RecommendedUpdates
        {
            get
            {
                if ((_RecommendedUpdates == null))
                {
                    _RecommendedUpdates = base.CreateObjectSet<RecommendedUpdate>("RecommendedUpdates");
                }
                return _RecommendedUpdates;
            }
        }
        private ObjectSet<RecommendedUpdate> _RecommendedUpdates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreviousUpdate> PreviousUpdates
        {
            get
            {
                if ((_PreviousUpdates == null))
                {
                    _PreviousUpdates = base.CreateObjectSet<PreviousUpdate>("PreviousUpdates");
                }
                return _PreviousUpdates;
            }
        }
        private ObjectSet<PreviousUpdate> _PreviousUpdates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityLog> ActivityLogs
        {
            get
            {
                if ((_ActivityLogs == null))
                {
                    _ActivityLogs = base.CreateObjectSet<ActivityLog>("ActivityLogs");
                }
                return _ActivityLogs;
            }
        }
        private ObjectSet<ActivityLog> _ActivityLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Recommendation> Recommendations
        {
            get
            {
                if ((_Recommendations == null))
                {
                    _Recommendations = base.CreateObjectSet<Recommendation>("Recommendations");
                }
                return _Recommendations;
            }
        }
        private ObjectSet<Recommendation> _Recommendations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupServer> GroupServers
        {
            get
            {
                if ((_GroupServers == null))
                {
                    _GroupServers = base.CreateObjectSet<GroupServer>("GroupServers");
                }
                return _GroupServers;
            }
        }
        private ObjectSet<GroupServer> _GroupServers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prediction> Predictions
        {
            get
            {
                if ((_Predictions == null))
                {
                    _Predictions = base.CreateObjectSet<Prediction>("Predictions");
                }
                return _Predictions;
            }
        }
        private ObjectSet<Prediction> _Predictions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCookie> UserCookies
        {
            get
            {
                if ((_UserCookies == null))
                {
                    _UserCookies = base.CreateObjectSet<UserCookie>("UserCookies");
                }
                return _UserCookies;
            }
        }
        private ObjectSet<UserCookie> _UserCookies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroup> UserGroups
        {
            get
            {
                if ((_UserGroups == null))
                {
                    _UserGroups = base.CreateObjectSet<UserGroup>("UserGroups");
                }
                return _UserGroups;
            }
        }
        private ObjectSet<UserGroup> _UserGroups;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Servers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServers(Server server)
        {
            base.AddObject("Servers", server);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessLogs(AccessLog accessLog)
        {
            base.AddObject("AccessLogs", accessLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Caches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCaches(Cache cache)
        {
            base.AddObject("Caches", cache);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecommendedUpdates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecommendedUpdates(RecommendedUpdate recommendedUpdate)
        {
            base.AddObject("RecommendedUpdates", recommendedUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreviousUpdates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreviousUpdates(PreviousUpdate previousUpdate)
        {
            base.AddObject("PreviousUpdates", previousUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityLogs(ActivityLog activityLog)
        {
            base.AddObject("ActivityLogs", activityLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Recommendations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecommendations(Recommendation recommendation)
        {
            base.AddObject("Recommendations", recommendation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupServers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupServers(GroupServer groupServer)
        {
            base.AddObject("GroupServers", groupServer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Predictions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPredictions(Prediction prediction)
        {
            base.AddObject("Predictions", prediction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCookies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCookies(UserCookie userCookie)
        {
            base.AddObject("UserCookies", userCookie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroups(UserGroup userGroup)
        {
            base.AddObject("UserGroups", userGroup);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="AccessLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="downloadedFrom">Initial value of the DownloadedFrom property.</param>
        /// <param name="fetchDuration">Initial value of the FetchDuration property.</param>
        /// <param name="accessedAt">Initial value of the AccessedAt property.</param>
        /// <param name="cacheCreatedAt">Initial value of the CacheCreatedAt property.</param>
        public static AccessLog CreateAccessLog(global::System.Int32 id, global::System.Int32 downloadedFrom, global::System.Double fetchDuration, global::System.DateTime accessedAt, global::System.DateTime cacheCreatedAt)
        {
            AccessLog accessLog = new AccessLog();
            accessLog.Id = id;
            accessLog.DownloadedFrom = downloadedFrom;
            accessLog.FetchDuration = fetchDuration;
            accessLog.AccessedAt = accessedAt;
            accessLog.CacheCreatedAt = cacheCreatedAt;
            return accessLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadedFrom
        {
            get
            {
                return _DownloadedFrom;
            }
            set
            {
                OnDownloadedFromChanging(value);
                ReportPropertyChanging("DownloadedFrom");
                _DownloadedFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadedFrom");
                OnDownloadedFromChanged();
            }
        }
        private global::System.Int32 _DownloadedFrom;
        partial void OnDownloadedFromChanging(global::System.Int32 value);
        partial void OnDownloadedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FetchDuration
        {
            get
            {
                return _FetchDuration;
            }
            set
            {
                OnFetchDurationChanging(value);
                ReportPropertyChanging("FetchDuration");
                _FetchDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FetchDuration");
                OnFetchDurationChanged();
            }
        }
        private global::System.Double _FetchDuration;
        partial void OnFetchDurationChanging(global::System.Double value);
        partial void OnFetchDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AccessedAt
        {
            get
            {
                return _AccessedAt;
            }
            set
            {
                OnAccessedAtChanging(value);
                ReportPropertyChanging("AccessedAt");
                _AccessedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessedAt");
                OnAccessedAtChanged();
            }
        }
        private global::System.DateTime _AccessedAt;
        partial void OnAccessedAtChanging(global::System.DateTime value);
        partial void OnAccessedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CacheCreatedAt
        {
            get
            {
                return _CacheCreatedAt;
            }
            set
            {
                OnCacheCreatedAtChanging(value);
                ReportPropertyChanging("CacheCreatedAt");
                _CacheCreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CacheCreatedAt");
                OnCacheCreatedAtChanged();
            }
        }
        private global::System.DateTime _CacheCreatedAt;
        partial void OnCacheCreatedAtChanging(global::System.DateTime value);
        partial void OnCacheCreatedAtChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "CacheAccessLog", "Cache")]
        public Cache Cache
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CacheAccessLog", "Cache").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CacheAccessLog", "Cache").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cache> CacheReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CacheAccessLog", "Cache");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cache>("DataModel.CacheAccessLog", "Cache", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ActivityLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="absoluteUri">Initial value of the AbsoluteUri property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="userFirstname">Initial value of the UserFirstname property.</param>
        /// <param name="userSurname">Initial value of the UserSurname property.</param>
        /// <param name="serverId">Initial value of the ServerId property.</param>
        public static ActivityLog CreateActivityLog(global::System.Int32 id, global::System.String absoluteUri, global::System.String title, global::System.String message, global::System.DateTime dateTime, global::System.Int32 action, global::System.Int32 type, global::System.String userFirstname, global::System.String userSurname, global::System.Int32 serverId)
        {
            ActivityLog activityLog = new ActivityLog();
            activityLog.Id = id;
            activityLog.AbsoluteUri = absoluteUri;
            activityLog.Title = title;
            activityLog.Message = message;
            activityLog.DateTime = dateTime;
            activityLog.Action = action;
            activityLog.Type = type;
            activityLog.UserFirstname = userFirstname;
            activityLog.UserSurname = userSurname;
            activityLog.ServerId = serverId;
            return activityLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AbsoluteUri
        {
            get
            {
                return _AbsoluteUri;
            }
            set
            {
                OnAbsoluteUriChanging(value);
                ReportPropertyChanging("AbsoluteUri");
                _AbsoluteUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AbsoluteUri");
                OnAbsoluteUriChanged();
            }
        }
        private global::System.String _AbsoluteUri;
        partial void OnAbsoluteUriChanging(global::System.String value);
        partial void OnAbsoluteUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.Int32 _Action;
        partial void OnActionChanging(global::System.Int32 value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserFirstname
        {
            get
            {
                return _UserFirstname;
            }
            set
            {
                OnUserFirstnameChanging(value);
                ReportPropertyChanging("UserFirstname");
                _UserFirstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserFirstname");
                OnUserFirstnameChanged();
            }
        }
        private global::System.String _UserFirstname;
        partial void OnUserFirstnameChanging(global::System.String value);
        partial void OnUserFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserSurname
        {
            get
            {
                return _UserSurname;
            }
            set
            {
                OnUserSurnameChanging(value);
                ReportPropertyChanging("UserSurname");
                _UserSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserSurname");
                OnUserSurnameChanged();
            }
        }
        private global::System.String _UserSurname;
        partial void OnUserSurnameChanging(global::System.String value);
        partial void OnUserSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerId
        {
            get
            {
                return _ServerId;
            }
            set
            {
                OnServerIdChanging(value);
                ReportPropertyChanging("ServerId");
                _ServerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerId");
                OnServerIdChanged();
            }
        }
        private global::System.Int32 _ServerId;
        partial void OnServerIdChanging(global::System.Int32 value);
        partial void OnServerIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerActivityLog", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerActivityLog", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerActivityLog", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerActivityLog", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("DataModel.ServerActivityLog", "Server", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Cache")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cache : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cache object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="absoluteUri">Initial value of the AbsoluteUri property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateUpdated">Initial value of the DateUpdated property.</param>
        /// <param name="hash">Initial value of the Hash property.</param>
        /// <param name="uriHash">Initial value of the UriHash property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        public static Cache CreateCache(global::System.Int32 id, global::System.String absoluteUri, global::System.DateTime dateCreated, global::System.DateTime dateUpdated, global::System.String hash, global::System.Int32 uriHash, global::System.Int32 type, global::System.Int64 size)
        {
            Cache cache = new Cache();
            cache.Id = id;
            cache.AbsoluteUri = absoluteUri;
            cache.DateCreated = dateCreated;
            cache.DateUpdated = dateUpdated;
            cache.Hash = hash;
            cache.UriHash = uriHash;
            cache.Type = type;
            cache.Size = size;
            return cache;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AbsoluteUri
        {
            get
            {
                return _AbsoluteUri;
            }
            set
            {
                OnAbsoluteUriChanging(value);
                ReportPropertyChanging("AbsoluteUri");
                _AbsoluteUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AbsoluteUri");
                OnAbsoluteUriChanged();
            }
        }
        private global::System.String _AbsoluteUri;
        partial void OnAbsoluteUriChanging(global::System.String value);
        partial void OnAbsoluteUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateAt
        {
            get
            {
                return _UpdateAt;
            }
            set
            {
                OnUpdateAtChanging(value);
                ReportPropertyChanging("UpdateAt");
                _UpdateAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateAt");
                OnUpdateAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateAt;
        partial void OnUpdateAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private global::System.DateTime _DateUpdated;
        partial void OnDateUpdatedChanging(global::System.DateTime value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.String _Hash;
        partial void OnHashChanging(global::System.String value);
        partial void OnHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UriHash
        {
            get
            {
                return _UriHash;
            }
            set
            {
                OnUriHashChanging(value);
                ReportPropertyChanging("UriHash");
                _UriHash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UriHash");
                OnUriHashChanged();
            }
        }
        private global::System.Int32 _UriHash;
        partial void OnUriHashChanging(global::System.Int32 value);
        partial void OnUriHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int64 _Size;
        partial void OnSizeChanging(global::System.Int64 value);
        partial void OnSizeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "CacheAccessLog", "AccessLog")]
        public EntityCollection<AccessLog> AccessLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessLog>("DataModel.CacheAccessLog", "AccessLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessLog>("DataModel.CacheAccessLog", "AccessLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "CacheRecommendedUpdate", "RecommendedUpdate")]
        public EntityCollection<RecommendedUpdate> RecommendedUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecommendedUpdate>("DataModel.CacheRecommendedUpdate", "RecommendedUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecommendedUpdate>("DataModel.CacheRecommendedUpdate", "RecommendedUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerCache", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerCache", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerCache", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerCache", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("DataModel.ServerCache", "Server", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "CachePreviousUpdate", "PreviousUpdate")]
        public EntityCollection<PreviousUpdate> PreviousUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreviousUpdate>("DataModel.CachePreviousUpdate", "PreviousUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreviousUpdate>("DataModel.CachePreviousUpdate", "PreviousUpdate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name, global::System.String description, global::System.DateTime dateCreated, global::System.DateTime dateModified)
        {
            Group group = new Group();
            group.Id = id;
            group.Name = name;
            group.Description = description;
            group.DateCreated = dateCreated;
            group.DateModified = dateModified;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupRecommendation", "Recommendation")]
        public EntityCollection<Recommendation> Recommendations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recommendation>("DataModel.GroupRecommendation", "Recommendation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recommendation>("DataModel.GroupRecommendation", "Recommendation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupGroupServer", "GroupServer")]
        public EntityCollection<GroupServer> GroupServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupServer>("DataModel.GroupGroupServer", "GroupServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupServer>("DataModel.GroupGroupServer", "GroupServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupTag", "Tag")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("DataModel.GroupTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("DataModel.GroupTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupUserGroups", "UserGroups")]
        public EntityCollection<UserGroup> UserGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserGroup>("DataModel.GroupUserGroups", "UserGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserGroup>("DataModel.GroupUserGroups", "UserGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="GroupServer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupServer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupServer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static GroupServer CreateGroupServer(global::System.Int32 id, global::System.DateTime dateCreated)
        {
            GroupServer groupServer = new GroupServer();
            groupServer.Id = id;
            groupServer.DateCreated = dateCreated;
            return groupServer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerGroupServer", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerGroupServer", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerGroupServer", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerGroupServer", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("DataModel.ServerGroupServer", "Server", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupGroupServer", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupGroupServer", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupGroupServer", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupGroupServer", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("DataModel.GroupGroupServer", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Prediction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prediction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prediction object.
        /// </summary>
        /// <param name="pagesCount">Initial value of the PagesCount property.</param>
        /// <param name="linksCount">Initial value of the LinksCount property.</param>
        /// <param name="lastPrediction">Initial value of the LastPrediction property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Prediction CreatePrediction(global::System.Int32 pagesCount, global::System.Int32 linksCount, global::System.DateTime lastPrediction, global::System.Int32 id)
        {
            Prediction prediction = new Prediction();
            prediction.PagesCount = pagesCount;
            prediction.LinksCount = linksCount;
            prediction.LastPrediction = lastPrediction;
            prediction.Id = id;
            return prediction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PagesCount
        {
            get
            {
                return _PagesCount;
            }
            set
            {
                OnPagesCountChanging(value);
                ReportPropertyChanging("PagesCount");
                _PagesCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PagesCount");
                OnPagesCountChanged();
            }
        }
        private global::System.Int32 _PagesCount;
        partial void OnPagesCountChanging(global::System.Int32 value);
        partial void OnPagesCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinksCount
        {
            get
            {
                return _LinksCount;
            }
            set
            {
                OnLinksCountChanging(value);
                ReportPropertyChanging("LinksCount");
                _LinksCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinksCount");
                OnLinksCountChanged();
            }
        }
        private global::System.Int32 _LinksCount;
        partial void OnLinksCountChanging(global::System.Int32 value);
        partial void OnLinksCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPrediction
        {
            get
            {
                return _LastPrediction;
            }
            set
            {
                OnLastPredictionChanging(value);
                ReportPropertyChanging("LastPrediction");
                _LastPrediction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPrediction");
                OnLastPredictionChanged();
            }
        }
        private global::System.DateTime _LastPrediction;
        partial void OnLastPredictionChanging(global::System.DateTime value);
        partial void OnLastPredictionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "PredictionServer", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.PredictionServer", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.PredictionServer", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.PredictionServer", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("DataModel.PredictionServer", "Server", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="PreviousUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreviousUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreviousUpdate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="hoursSincePreviousUpdate">Initial value of the HoursSincePreviousUpdate property.</param>
        /// <param name="success">Initial value of the Success property.</param>
        public static PreviousUpdate CreatePreviousUpdate(global::System.Int32 id, global::System.DateTime date, global::System.Double hoursSincePreviousUpdate, global::System.Boolean success)
        {
            PreviousUpdate previousUpdate = new PreviousUpdate();
            previousUpdate.Id = id;
            previousUpdate.Date = date;
            previousUpdate.HoursSincePreviousUpdate = hoursSincePreviousUpdate;
            previousUpdate.Success = success;
            return previousUpdate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HoursSincePreviousUpdate
        {
            get
            {
                return _HoursSincePreviousUpdate;
            }
            set
            {
                OnHoursSincePreviousUpdateChanging(value);
                ReportPropertyChanging("HoursSincePreviousUpdate");
                _HoursSincePreviousUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoursSincePreviousUpdate");
                OnHoursSincePreviousUpdateChanged();
            }
        }
        private global::System.Double _HoursSincePreviousUpdate;
        partial void OnHoursSincePreviousUpdateChanging(global::System.Double value);
        partial void OnHoursSincePreviousUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Success
        {
            get
            {
                return _Success;
            }
            set
            {
                OnSuccessChanging(value);
                ReportPropertyChanging("Success");
                _Success = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Success");
                OnSuccessChanged();
            }
        }
        private global::System.Boolean _Success;
        partial void OnSuccessChanging(global::System.Boolean value);
        partial void OnSuccessChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "CachePreviousUpdate", "Cache")]
        public Cache Cache
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CachePreviousUpdate", "Cache").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CachePreviousUpdate", "Cache").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cache> CacheReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CachePreviousUpdate", "Cache");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cache>("DataModel.CachePreviousUpdate", "Cache", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Recommendation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recommendation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Recommendation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="absoluteUri">Initial value of the AbsoluteUri property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Recommendation CreateRecommendation(global::System.Int32 id, global::System.String absoluteUri, global::System.String title, global::System.String description, global::System.DateTime dateCreated)
        {
            Recommendation recommendation = new Recommendation();
            recommendation.Id = id;
            recommendation.AbsoluteUri = absoluteUri;
            recommendation.Title = title;
            recommendation.Description = description;
            recommendation.DateCreated = dateCreated;
            return recommendation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AbsoluteUri
        {
            get
            {
                return _AbsoluteUri;
            }
            set
            {
                OnAbsoluteUriChanging(value);
                ReportPropertyChanging("AbsoluteUri");
                _AbsoluteUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AbsoluteUri");
                OnAbsoluteUriChanged();
            }
        }
        private global::System.String _AbsoluteUri;
        partial void OnAbsoluteUriChanging(global::System.String value);
        partial void OnAbsoluteUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupRecommendation", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupRecommendation", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupRecommendation", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupRecommendation", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("DataModel.GroupRecommendation", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerRecommendation", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerRecommendation", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerRecommendation", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerRecommendation", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("DataModel.ServerRecommendation", "Server", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="RecommendedUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecommendedUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecommendedUpdate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static RecommendedUpdate CreateRecommendedUpdate(global::System.Int32 id, global::System.DateTime dateCreated)
        {
            RecommendedUpdate recommendedUpdate = new RecommendedUpdate();
            recommendedUpdate.Id = id;
            recommendedUpdate.DateCreated = dateCreated;
            return recommendedUpdate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sent
        {
            get
            {
                return _Sent;
            }
            set
            {
                OnSentChanging(value);
                ReportPropertyChanging("Sent");
                _Sent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sent");
                OnSentChanged();
            }
        }
        private global::System.Boolean _Sent = false;
        partial void OnSentChanging(global::System.Boolean value);
        partial void OnSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority = 10;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "CacheRecommendedUpdate", "Cache")]
        public Cache Cache
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CacheRecommendedUpdate", "Cache").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CacheRecommendedUpdate", "Cache").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cache> CacheReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cache>("DataModel.CacheRecommendedUpdate", "Cache");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cache>("DataModel.CacheRecommendedUpdate", "Cache", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerRecommendedUpdate", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerRecommendedUpdate", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerRecommendedUpdate", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerRecommendedUpdate", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("DataModel.ServerRecommendedUpdate", "Server", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Server")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Server : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Server object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="serverName">Initial value of the ServerName property.</param>
        public static Server CreateServer(global::System.Int32 id, global::System.String password, global::System.String username, global::System.DateTime dateCreated, global::System.String serverName)
        {
            Server server = new Server();
            server.Id = id;
            server.Password = password;
            server.Username = username;
            server.DateCreated = dateCreated;
            server.ServerName = serverName;
            return server;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerCache", "Cache")]
        public EntityCollection<Cache> Caches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cache>("DataModel.ServerCache", "Cache");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cache>("DataModel.ServerCache", "Cache", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerActivityLog", "ActivityLog")]
        public EntityCollection<ActivityLog> ActivityLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLog>("DataModel.ServerActivityLog", "ActivityLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLog>("DataModel.ServerActivityLog", "ActivityLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerRecommendedUpdate", "RecommendedUpdate")]
        public EntityCollection<RecommendedUpdate> RecommendedUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecommendedUpdate>("DataModel.ServerRecommendedUpdate", "RecommendedUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecommendedUpdate>("DataModel.ServerRecommendedUpdate", "RecommendedUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerGroupServer", "GroupServer")]
        public EntityCollection<GroupServer> GroupServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupServer>("DataModel.ServerGroupServer", "GroupServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupServer>("DataModel.ServerGroupServer", "GroupServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerRecommendation", "Recommendation")]
        public EntityCollection<Recommendation> Recommendations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recommendation>("DataModel.ServerRecommendation", "Recommendation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recommendation>("DataModel.ServerRecommendation", "Recommendation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "PredictionServer", "Prediction")]
        public Prediction Prediction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prediction>("DataModel.PredictionServer", "Prediction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prediction>("DataModel.PredictionServer", "Prediction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prediction> PredictionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prediction>("DataModel.PredictionServer", "Prediction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prediction>("DataModel.PredictionServer", "Prediction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DataModel.ServerUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DataModel.ServerUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String value, global::System.DateTime dateCreated)
        {
            Tag tag = new Tag();
            tag.Id = id;
            tag.Value = value;
            tag.DateCreated = dateCreated;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupTag", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupTag", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupTag", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupTag", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("DataModel.GroupTag", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String passwordHash, global::System.String passwordSalt, global::System.String firstName, global::System.String surname, global::System.DateTime dateCreated, global::System.DateTime dateModified)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.PasswordHash = passwordHash;
            user.PasswordSalt = passwordSalt;
            user.FirstName = firstName;
            user.Surname = surname;
            user.DateCreated = dateCreated;
            user.DateModified = dateModified;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ServerUser", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerUser", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerUser", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("DataModel.ServerUser", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("DataModel.ServerUser", "Server", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserCookies", "UserCookies")]
        public EntityCollection<UserCookie> UserCookies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCookie>("DataModel.UserUserCookies", "UserCookies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCookie>("DataModel.UserUserCookies", "UserCookies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserGroups", "UserGroups")]
        public EntityCollection<UserGroup> UserGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserGroup>("DataModel.UserUserGroups", "UserGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserGroup>("DataModel.UserUserGroups", "UserGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UserCookie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCookie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCookie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cookie">Initial value of the Cookie property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static UserCookie CreateUserCookie(global::System.Int32 id, global::System.String cookie, global::System.DateTime dateCreated)
        {
            UserCookie userCookie = new UserCookie();
            userCookie.Id = id;
            userCookie.Cookie = cookie;
            userCookie.DateCreated = dateCreated;
            return userCookie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cookie
        {
            get
            {
                return _Cookie;
            }
            set
            {
                OnCookieChanging(value);
                ReportPropertyChanging("Cookie");
                _Cookie = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cookie");
                OnCookieChanged();
            }
        }
        private global::System.String _Cookie;
        partial void OnCookieChanging(global::System.String value);
        partial void OnCookieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserCookies", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserCookies", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserCookies", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserCookies", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.UserUserCookies", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static UserGroup CreateUserGroup(global::System.Int32 id, global::System.DateTime dateCreated)
        {
            UserGroup userGroup = new UserGroup();
            userGroup.Id = id;
            userGroup.DateCreated = dateCreated;
            return userGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserGroups", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserGroups", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserGroups", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserGroups", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.UserUserGroups", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupUserGroups", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupUserGroups", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupUserGroups", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DataModel.GroupUserGroups", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("DataModel.GroupUserGroups", "Group", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
